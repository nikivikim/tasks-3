@startuml
class model.handlers.EmptyCoinsHandler {
+ void handle(int,Player,SlotMachine)
}
class main.Main {
+ {static} void main(String[])
}
class model.SlotMachine {
- int coins
- Handler handler
+ int getCoins()
+ void addCoins(int)
+ void removeCoins(int)
+ int play(Player)
- int spin()
}
class model.handlers.WinHandler {
+ void handle(int,Player,SlotMachine)
}
class main.MainWindow {
+ void start(Stage)
+ void run()
}
class model.Player {
- int coins
+ int getCoins()
+ void addCoins(int)
+ void removeCoins(int)
}
class controller.Controller {
- SlotMachine slotMachine
- Player currentPlayer
- GraphicsContext gc
- Pane paneMain
- Canvas myCanvas
- ImageView imgView1
- Label lblInfo
+ void initialize(URL,ResourceBundle)
+ void OnBtnStart(ActionEvent)
+ void OnBtnEnd(ActionEvent)
+ void OnMouseClickImg(MouseEvent)
- void UpdatingPointsOnScreen()
}
abstract class model.handlers.Handler {
- Handler nextHandler
+ {abstract}void handle(int,Player,SlotMachine)
+ Handler getNextHandler()
}
class model.handlers.LoseHandler {
+ void handle(int,Player,SlotMachine)
}


model.handlers.Handler <|-- model.handlers.EmptyCoinsHandler
model.handlers.Handler <|-- model.handlers.WinHandler
javafx.application.Application <|-- main.MainWindow
javafx.fxml.Initializable <|.. controller.Controller
model.handlers.Handler <|-- model.handlers.LoseHandler
@enduml